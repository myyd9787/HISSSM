<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.mapper.MedicalDiseaseMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.MedicalDisease">
    <id column="ID" jdbcType="INTEGER" property="ID" />
    <result column="MedicalID" jdbcType="INTEGER" property="medicalID" />
    <result column="RegistID" jdbcType="INTEGER" property="registID" />
    <result column="DiseaseID" jdbcType="INTEGER" property="diseaseID" />
    <result column="DiagnoseType" jdbcType="INTEGER" property="diagnoseType" />
    <result column="GetSiskDate" jdbcType="TIMESTAMP" property="getSiskDate" />
    <result column="DiagnoseCate" jdbcType="INTEGER" property="diagnoseCate" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, MedicalID, RegistID, DiseaseID, DiagnoseType, GetSiskDate, DiagnoseCate
  </sql>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from medicaldisease
    where ID = #{ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from medicaldisease
    where ID = #{ID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.MedicalDisease">
    insert into medicaldisease (ID, MedicalID, RegistID, 
      DiseaseID, DiagnoseType, GetSiskDate, 
      DiagnoseCate)
    values (#{ID,jdbcType=INTEGER}, #{medicalID,jdbcType=INTEGER}, #{registID,jdbcType=INTEGER}, 
      #{diseaseID,jdbcType=INTEGER}, #{diagnoseType,jdbcType=INTEGER}, #{getSiskDate,jdbcType=TIMESTAMP}, 
      #{diagnoseCate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.MedicalDisease">
    insert into medicaldisease
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ID != null">
        ID,
      </if>
      <if test="medicalID != null">
        MedicalID,
      </if>
      <if test="registID != null">
        RegistID,
      </if>
      <if test="diseaseID != null">
        DiseaseID,
      </if>
      <if test="diagnoseType != null">
        DiagnoseType,
      </if>
      <if test="getSiskDate != null">
        GetSiskDate,
      </if>
      <if test="diagnoseCate != null">
        DiagnoseCate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ID != null">
        #{ID,jdbcType=INTEGER},
      </if>
      <if test="medicalID != null">
        #{medicalID,jdbcType=INTEGER},
      </if>
      <if test="registID != null">
        #{registID,jdbcType=INTEGER},
      </if>
      <if test="diseaseID != null">
        #{diseaseID,jdbcType=INTEGER},
      </if>
      <if test="diagnoseType != null">
        #{diagnoseType,jdbcType=INTEGER},
      </if>
      <if test="getSiskDate != null">
        #{getSiskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="diagnoseCate != null">
        #{diagnoseCate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.MedicalDisease">
    update medicaldisease
    <set>
      <if test="medicalID != null">
        MedicalID = #{medicalID,jdbcType=INTEGER},
      </if>
      <if test="registID != null">
        RegistID = #{registID,jdbcType=INTEGER},
      </if>
      <if test="diseaseID != null">
        DiseaseID = #{diseaseID,jdbcType=INTEGER},
      </if>
      <if test="diagnoseType != null">
        DiagnoseType = #{diagnoseType,jdbcType=INTEGER},
      </if>
      <if test="getSiskDate != null">
        GetSiskDate = #{getSiskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="diagnoseCate != null">
        DiagnoseCate = #{diagnoseCate,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.MedicalDisease">
    update medicaldisease
    set MedicalID = #{medicalID,jdbcType=INTEGER},
      RegistID = #{registID,jdbcType=INTEGER},
      DiseaseID = #{diseaseID,jdbcType=INTEGER},
      DiagnoseType = #{diagnoseType,jdbcType=INTEGER},
      GetSiskDate = #{getSiskDate,jdbcType=TIMESTAMP},
      DiagnoseCate = #{diagnoseCate,jdbcType=INTEGER}
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.MedicalDisease">
    <id column="ID" jdbcType="INTEGER" property="ID" />
    <result column="MedicalID" jdbcType="INTEGER" property="medicalID" />
    <result column="RegistID" jdbcType="INTEGER" property="registID" />
    <result column="DiseaseID" jdbcType="INTEGER" property="diseaseID" />
    <result column="DiagnoseType" jdbcType="INTEGER" property="diagnoseType" />
    <result column="GetSiskDate" jdbcType="TIMESTAMP" property="getSiskDate" />
    <result column="DiagnoseCate" jdbcType="INTEGER" property="diagnoseCate" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, MedicalID, RegistID, DiseaseID, DiagnoseType, GetSiskDate, DiagnoseCate
  </sql>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from medicaldisease
    where ID = #{ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from medicaldisease
    where ID = #{ID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.MedicalDisease">
    insert into medicaldisease (ID, MedicalID, RegistID, 
      DiseaseID, DiagnoseType, GetSiskDate, 
      DiagnoseCate)
    values (#{ID,jdbcType=INTEGER}, #{medicalID,jdbcType=INTEGER}, #{registID,jdbcType=INTEGER}, 
      #{diseaseID,jdbcType=INTEGER}, #{diagnoseType,jdbcType=INTEGER}, #{getSiskDate,jdbcType=TIMESTAMP}, 
      #{diagnoseCate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.MedicalDisease">
    insert into medicaldisease
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ID != null">
        ID,
      </if>
      <if test="medicalID != null">
        MedicalID,
      </if>
      <if test="registID != null">
        RegistID,
      </if>
      <if test="diseaseID != null">
        DiseaseID,
      </if>
      <if test="diagnoseType != null">
        DiagnoseType,
      </if>
      <if test="getSiskDate != null">
        GetSiskDate,
      </if>
      <if test="diagnoseCate != null">
        DiagnoseCate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ID != null">
        #{ID,jdbcType=INTEGER},
      </if>
      <if test="medicalID != null">
        #{medicalID,jdbcType=INTEGER},
      </if>
      <if test="registID != null">
        #{registID,jdbcType=INTEGER},
      </if>
      <if test="diseaseID != null">
        #{diseaseID,jdbcType=INTEGER},
      </if>
      <if test="diagnoseType != null">
        #{diagnoseType,jdbcType=INTEGER},
      </if>
      <if test="getSiskDate != null">
        #{getSiskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="diagnoseCate != null">
        #{diagnoseCate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.MedicalDisease">
    update medicaldisease
    <set>
      <if test="medicalID != null">
        MedicalID = #{medicalID,jdbcType=INTEGER},
      </if>
      <if test="registID != null">
        RegistID = #{registID,jdbcType=INTEGER},
      </if>
      <if test="diseaseID != null">
        DiseaseID = #{diseaseID,jdbcType=INTEGER},
      </if>
      <if test="diagnoseType != null">
        DiagnoseType = #{diagnoseType,jdbcType=INTEGER},
      </if>
      <if test="getSiskDate != null">
        GetSiskDate = #{getSiskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="diagnoseCate != null">
        DiagnoseCate = #{diagnoseCate,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.MedicalDisease">
    update medicaldisease
    set MedicalID = #{medicalID,jdbcType=INTEGER},
      RegistID = #{registID,jdbcType=INTEGER},
      DiseaseID = #{diseaseID,jdbcType=INTEGER},
      DiagnoseType = #{diagnoseType,jdbcType=INTEGER},
      GetSiskDate = #{getSiskDate,jdbcType=TIMESTAMP},
      DiagnoseCate = #{diagnoseCate,jdbcType=INTEGER}
    where ID = #{ID,jdbcType=INTEGER}
  </update>
</mapper>